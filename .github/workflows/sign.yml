name: Sign Chart

on: workflow_dispatch

env:
  IMAGE: "ghcr.io/digitalnostril/${{ github.event.repository.name }}"

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Get version
        id: vars
        run : echo "version=$(grep -oP '^VERSION \?= \K.*' Makefile)" >> $GITHUB_OUTPUT

      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c

      - name: Generate image metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: |
            ${{ env.IMAGE }}
          tags: |
            type=raw,value=${{ steps.vars.outputs.VERSION }}

      - name: Log into ghcr.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@af5a7ed5ba88268d5278f7203fb52cd833f66d6e
        id: build-and-push
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          sbom: true
          build-args: |
            REVISON=${{ github.sha }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4
        with:
          cosign-release: 'v2.2.3'

      - name: Sign image
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: cosign sign --yes ghcr.io/digitalnostril/zaproxy-operator@${DIGEST}

      - name: Push and Sign Chart
        env:
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          helm package helm/zaproxy-operator
          helm push zaproxy-operator-${VERSION}.tgz oci://ghcr.io/digitalnostril/helm &> .output
          cat .output
          DIGEST=$(cat .output | awk -F "[, ]+" '/Digest/{print $NF}')
          cosign sign --yes ghcr.io/digitalnostril/helm/zaproxy-operator@${DIGEST}
